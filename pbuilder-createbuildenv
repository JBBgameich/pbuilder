#! /bin/bash
# Creating the build environment with debootstrap.

. /usr/lib/pbuilder/pbuilder-checkparams
. /usr/lib/pbuilder/pbuilder-modules

CHROOTEXEC="chroot $BUILDPLACE "
if [ -z "$DISTRIBUTION" ]; then
    DISTRIBUTION=woody
fi
echo "Distribution is $DISTRIBUTION."

cleanbuildplace

echo "Building the build environment"
mkdir -p "$BUILDPLACE"
if [ ! -d "$BUILDPLACE" ]; then
    echo "pbuilder: Could not make directory [$BUILDPLACE]" >&2
    exit 1
fi
echo " -> running debootstrap"
( cd "$BUILDPLACE" && debootstrap "$DISTRIBUTION" . "$MIRRORSITE")
echo " -> debootstrap finished"
mkdir -p "$BUILDPLACE/tmp/buildd"
echo " -> copying local configuration"
for a in passwd hosts hostname resolv.conf apt; do 
    cp -r /etc/$a "$BUILDPLACE/etc/";
done

echo " -> installing apt-lines"
cat > "$BUILDPLACE/etc/apt/sources.list" << EOF
deb $MIRRORSITE $DISTRIBUTION main contrib non-free
deb-src $MIRRORSITE $DISTRIBUTION main contrib non-free
EOF

echo "Refreshing the base.tgz "
echo " -> upgrading packages"
mountproc
$CHROOTEXEC /usr/bin/apt-get update
$CHROOTEXEC /usr/bin/dpkg --purge lilo
$CHROOTEXEC /usr/bin/apt-get -y dist-upgrade
$CHROOTEXEC /usr/bin/apt-get -y install build-essential dpkg-dev apt $EXTRAPACKAGES
$CHROOTEXEC /usr/bin/apt-get clean
umountproc
echo " -> creating base.tgz"
( cd "$BUILDPLACE" && tar cfz "$BASETGZ" * || echo " -> failed building base.tgz")
cleanbuildplace

