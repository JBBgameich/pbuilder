#! /bin/bash
#necessary for installs.
export LANG=C
export LC_ALL=C

. /usr/lib/pbuilder/pbuilder-checkparams

CHROOTEXEC="chroot $BUILDPLACE "
if [ -z "$DISTRIBUTION" ]; then
  DISTRIBUTION=woody
fi
echo Distribution is $DISTRIBUTION.

echo cleaning the build env
rm -rf $BUILDPLACE

echo "building the build env"
mkdir -p $BUILDPLACE
echo " -> mounting proc"
mkdir -p $BUILDPLACE/proc
mount -t proc /proc $BUILDPLACE/proc 
echo " -> running debootstrap"
cd $BUILDPLACE
debootstrap $DISTRIBUTION .
mkdir -p $BUILDPLACE/tmp/buildd
echo " -> copying local configuration"
for a in passwd hosts hostname resolv.conf apt; do 
  cp -r /etc/$a $BUILDPLACE/etc/;
done

echo "Installing apt-lines"
cat > $BUILDPLACE/etc/apt/sources.list << EOF
deb $MIRRORSITE $DISTRIBUTION main contrib non-free
deb-src $MIRRORSITE $DISTRIBUTION main contrib non-free
EOF

echo "Refreshing the base.tgz "
echo " -> upgrading packages"
$CHROOTEXEC /usr/bin/apt-get update
$CHROOTEXEC /usr/bin/dpkg --purge lilo
$CHROOTEXEC /usr/bin/apt-get -y dist-upgrade
$CHROOTEXEC /usr/bin/apt-get -y install build-essential dpkg-dev apt $EXTRAPACKAGES
$CHROOTEXEC /usr/bin/apt-get clean
echo " -> unmounting proc"
umount $BUILDPLACE/proc
echo " -> creating base.tgz"
cd $BUILDPLACE
tar cfz $BASETGZ *
